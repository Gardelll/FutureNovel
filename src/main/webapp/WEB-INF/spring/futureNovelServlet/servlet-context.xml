<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 启用 Spring 的注解处理器 -->
    <annotation-driven />

    <!-- 静态资源映射到 ${webappRoot}/resources 目录，对应请求 Url 的 /resources/** -->
    <resources mapping="/resources/**" location="resources/" />

    <!-- 解析 JSON 作为请求和响应 -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- 将 JSON 转换为 HttpMessage -->
    <beans:bean id="jsonMessageConverter"
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean>

    <context:property-placeholder location="WEB-INF/spring/futureNovelServlet/database_config.properties"/>

    <beans:bean id="mysqlDataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${jdbc_driverClassName}"/>
        <beans:property name="url"
                        value="${jdbc_url}"/>
        <beans:property name="username" value="${jdbc_username}"/>
        <beans:property name="password" value="${jdbc_password}"/>
    </beans:bean>

    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="mysqlDataSource" />
        <beans:property name="typeAliasesPackage" value="net.wlgzs.futurenovel.model" />
        <beans:property name="configLocation" value="WEB-INF/mybatis/mybatis-config.xml" />
    </beans:bean>

    <context:component-scan base-package="net.wlgzs.futurenovel" />

    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:constructor-arg ref="mysqlDataSource" />
    </beans:bean>
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <beans:bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <beans:property name="prefix" value="/WEB-INF/thymeleaf/" />
        <beans:property name="suffix" value=".html" />
        <beans:property name="characterEncoding" value="UTF-8"/>
        <beans:property name="templateMode" value="HTML" />
        <!-- Template cache is set to false (default is true). -->
        <beans:property name="cacheable" value="false" />
    </beans:bean>

    <beans:bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <beans:property name="templateResolver" ref="templateResolver" />
        <!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed up  -->
        <!-- execution in most scenarios, but might be incompatible with specific    -->
        <!-- cases when expressions in one template are reused across different data -->
        <!-- ypes, so this flag is "false" by default for safer backwards            -->
        <!-- compatibility.                                                          -->
        <beans:property name="enableSpringELCompiler" value="false" />
    </beans:bean>

    <beans:bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <beans:property name="templateEngine" ref="templateEngine" />
        <!-- NOTE 'order' and 'viewNames' are optional -->
        <beans:property name="order" value="1" />
        <beans:property name="viewNames" value="*.html,*.xhtml" />
    </beans:bean>

</beans:beans>
