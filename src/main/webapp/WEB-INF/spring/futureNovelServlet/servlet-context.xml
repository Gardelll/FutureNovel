<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!--	<resources mapping="/resources/**" location="/resources/" />-->

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<context:component-scan base-package="net.wlgzs.futurenovel.controller" />

	<beans:bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
		<beans:property name="prefix" value="/WEB-INF/thymeleaf/" />
		<beans:property name="suffix" value=".html" />
		<beans:property name="characterEncoding" value="UTF-8"/>
		<beans:property name="templateMode" value="LEGACYHTML5" />
		<!-- Template cache is set to false (default is true). -->
		<beans:property name="cacheable" value="false" />
	</beans:bean>

	<beans:bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
		<beans:property name="templateResolver" ref="templateResolver" />
		<!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed up  -->
		<!-- execution in most scenarios, but might be incompatible with specific    -->
		<!-- cases when expressions in one template are reused across different data -->
		<!-- ypes, so this flag is "false" by default for safer backwards            -->
		<!-- compatibility.                                                          -->
		<beans:property name="enableSpringELCompiler" value="false" />
	</beans:bean>

	<beans:bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
		<beans:property name="templateEngine" ref="templateEngine" />
		<!-- NOTE 'order' and 'viewNames' are optional -->
		<beans:property name="order" value="1" />
		<beans:property name="viewNames" value="*.html,*.xhtml" />
	</beans:bean>

</beans:beans>
